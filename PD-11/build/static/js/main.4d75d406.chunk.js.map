{"version":3,"sources":["components/Header.tsx","components/AddBet.tsx","components/DealerBalance.tsx","pages/Home.tsx","App.tsx","components/web3.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","getCurrentAccount","a","window","web3","eth","getAccounts","accounts","AddBet","bet","account","console","log","contract","methods","addBet","send","from","DealerBalance","showBalance","call","getBalance","Home","useState","balance","setBalance","setBet","useEffect","newBalance","type","onChange","e","parseInt","target","value","onClick","App","path","exact","component","startWeb3","ethereum","Web3","enable","alert","loadContract","Contract","abi","LoadWeb3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wv+OAEaA,EAAS,WACpB,OACE,wBAAQC,UAAU,aAAlB,SACI,6C,kCCLFC,EAAiB,uCAAG,4BAAAC,EAAA,sEACCC,OAAOC,KAAKC,IAAIC,cADjB,cAChBC,EADgB,yBAEfA,EAAS,IAFM,2CAAH,qDAKVC,EAAM,uCAAG,WAAOC,GAAP,eAAAP,EAAA,sEACID,IADJ,OACZS,EADY,OAElBC,QAAQC,IAAIF,GACZP,OAAOU,SAASC,QAAQC,OAAON,GAAKO,KAAK,CAAEC,KAAMP,IAH/B,2CAAH,sDCLNQ,EAAa,uCAAG,4BAAAhB,EAAA,sEAEAC,OAAOU,SAASC,QAAQK,cAAcC,OAFtC,cAEnBC,EAFmB,OAGzBV,QAAQC,IAAIS,GAHa,kBAIlBA,GAJkB,2CAAH,qDCYbC,EAAO,WAAO,IAAD,EACMC,mBAAiB,GADvB,mBACjBC,EADiB,KACRC,EADQ,OAEFF,mBAAiB,GAFf,mBAEjBd,EAFiB,KAEZiB,EAFY,KAIxBC,qBAAU,WACRN,MACC,IAEH,IAAMA,EAAU,uCAAG,4BAAAnB,EAAA,sEACQgB,IADR,OACXU,EADW,OAEjBH,EAAWG,GAFM,2CAAH,qDAKhB,OACE,sBAAK5B,UAAU,MAAf,UACE,+BACE,gCACE,8BACE,mDAAsBwB,OAExB,gCACE,+CAEA,uBACAK,KAAK,SACLC,SAAU,SAAAC,GAAC,OAAIL,EAAOM,SAASD,EAAEE,OAAOC,WAExC,wBAAQC,QAAS,kBAAM3B,EAAOC,IAA9B,6BAKN,+BC1BS2B,MAbf,WACE,OACE,cAAC,IAAD,UACE,sBAAKpC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOqC,KAAK,IAAIC,OAAK,EAACC,UAAWjB,Y,2BCArCkB,EAAS,uCAAG,sBAAAtC,EAAA,sDACZC,OAAOsC,UACTtC,OAAOC,KAAO,IAAIsC,IAAKvC,OAAOsC,UAC9BtC,OAAOsC,SAASE,SAChBhC,QAAQC,IAAI,aAEZT,OAAOyC,MAAM,0BANC,2CAAH,qDAUTC,EAAY,uCAAG,sBAAA3C,EAAA,sEACN,IAAIC,OAAOC,KAAKC,IAAIyC,SAfrBjC,EAASkC,IAHC,8CAiBH,mFAAH,qDAILC,EAAQ,uCAAG,sBAAA9C,EAAA,sEAChBsC,IADgB,uBAEEK,IAFF,OAEtB1C,OAAOU,SAFe,kDAAH,qDCXNoC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCFdF,IAEAU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4d75d406.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return (\n    <header className=\"app-header\">\n        <h1>PolarBet</h1>\n      </header>\n  );\n};\n","const getCurrentAccount = async () => {\n    const accounts = await window.web3.eth.getAccounts();\n    return accounts[0];\n}\n\nexport const AddBet = async (bet: number) => {\n    const account = await getCurrentAccount();\n    console.log(account);\n    window.contract.methods.addBet(bet).send({ from: account });\n};\n\n","export const DealerBalance = async () => {\n\n    const getBalance = await window.contract.methods.showBalance().call();\n    console.log(getBalance);\n    return getBalance;\n};","import React, { useEffect, useState } from \"react\";\nimport { AddBet } from \"../components/AddBet\";\nimport { DealerBalance } from \"../components/DealerBalance\";\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n    web3: any;\n    contract: any;\n  }\n}\n\nexport const Home = () => {\n  const [balance, setBalance] = useState<number>(0);\n  const [bet, setBet] = useState<number>(0);\n\n  useEffect(() => {\n    getBalance();\n  }, []);\n\n  const getBalance = async () => {\n    const newBalance = await DealerBalance();\n    setBalance(newBalance);\n  };\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div>\n          <div>\n            <h2>Dealer balance = {balance}</h2>\n          </div>\n          <div>\n            <h2>Set your bet:</h2>\n        \n            <input \n            type=\"number\" \n            onChange={e => setBet(parseInt(e.target.value))}\n            />\n            <button onClick={() => AddBet(bet)}>add bet</button>\n\n          </div>\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Home } from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"Container\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home}></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import Web3 from \"web3\";\n// import contractABI from \"../assets/static/json/contractABI.json\";\n// const contractAddress = \"0x3Ff7a5a4262e1E018BEaBF657D94fEc22fCEc817\";\nimport contract from \"../assets/static/build/contracts/PolarBetV2.json\";\nconst contractAddress = \"0x0435F38A77843FA5B48BD49d96CB5aa5599DeCAF\";\n\nconst contractABI = () => {\n  const abi = contract.abi;\n  return abi; \n}\n\nconst startWeb3 = async () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n    console.log(\"if state\");\n  } else {\n    window.alert(\"Metamask not detected!\");\n  }\n};\n\nconst loadContract = async () => {\n  return await new window.web3.eth.Contract(contractABI(), contractAddress);\n};\n\nexport const LoadWeb3 = async () => {\n  await startWeb3();\n  window.contract = await loadContract();\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { LoadWeb3 } from './components/web3';\nimport reportWebVitals from './reportWebVitals';\nimport \"./assets/css/import.scss\";\n\nLoadWeb3();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}