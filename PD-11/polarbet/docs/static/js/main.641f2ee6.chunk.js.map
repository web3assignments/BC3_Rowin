{"version":3,"sources":["components/Header.tsx","components/AddBet.tsx","components/DealerBalance.tsx","components/DealerDiceResult.tsx","components/PayOut.tsx","components/PlayerDiceResult.tsx","components/PlayerWins.tsx","components/QueryId.tsx","components/RollDice.tsx","pages/Home.tsx","pages/IpfsImage.tsx","App.tsx","components/web3.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","getCurrentAccount","a","window","web3","eth","getAccounts","accounts","AddBet","bet","account","contract","methods","addBet","send","from","DealerBalance","dealerBalance","call","getBalance","DealerDiceResult","getDiceResultOfDealer","result","PayOut","payOut","id","PlayerDiceResult","getDiceResultOfUser","PlayerWins","events","log","QueryId","queryId","RollDice","rollDice","console","Home","useState","balance","setBalance","setBet","dealerResult","setDealerResult","playerResult","setPlayerResult","setQueryId","playerWinsLog","setPlayerWinsLog","useEffect","newBalance","getDealerDiceResult","diceResult","getPlayerDiceResult","getQueryId","getPlayerWins","eventLog","onClick","type","onChange","e","parseInt","target","value","IpfsImage","src","alt","App","basename","process","path","exact","component","startWeb3","ethereum","Web3","enable","alert","loadContract","Contract","abi","LoadWeb3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iosOAEaA,EAAS,WACpB,OACE,wBAAQC,UAAU,aAAlB,SACI,6C,gCCLFC,EAAiB,uCAAG,4BAAAC,EAAA,sEACCC,OAAOC,KAAKC,IAAIC,cADjB,cAChBC,EADgB,yBAEfA,EAAS,IAFM,2CAAH,qDAKVC,EAAM,uCAAG,WAAOC,GAAP,eAAAP,EAAA,sEACID,IADJ,OACZS,EADY,OAElBP,OAAOQ,SAASC,QAAQC,OAAOJ,GAAKK,KAAK,CAAEC,KAAML,IAF/B,2CAAH,sDCLNM,EAAa,uCAAG,4BAAAd,EAAA,sEACAC,OAAOQ,SAASC,QAAQK,gBAAgBC,OADxC,cACnBC,EADmB,yBAElBA,GAFkB,2CAAH,qDCAbC,EAAgB,uCAAG,4BAAAlB,EAAA,sEACPC,OAAOQ,SAASC,QAAQS,wBAAwBH,OADzC,cACtBI,EADsB,yBAErBA,GAFqB,2CAAH,qDCAvBrB,EAAiB,uCAAG,4BAAAC,EAAA,sEACCC,OAAOC,KAAKC,IAAIC,cADjB,cAChBC,EADgB,yBAEfA,EAAS,IAFM,2CAAH,qDAKVgB,EAAM,uCAAG,8BAAArB,EAAA,sEACID,IADJ,cACZS,EADY,gBAEDP,OAAOQ,SAASC,QAAQY,SAASV,KAAK,CAAEC,KAAML,IAF7C,cAEZe,EAFY,yBAGXA,GAHW,2CAAH,qDCLNC,EAAgB,uCAAG,4BAAAxB,EAAA,sEACPC,OAAOQ,SAASC,QAAQe,sBAAsBT,OADvC,cACtBI,EADsB,yBAErBA,GAFqB,2CAAH,qDCAhBM,EAAU,uCAAG,4BAAA1B,EAAA,sEACJC,OAAOQ,SAASkB,OAAOD,aADnB,cAChBE,EADgB,yBAEfA,GAFe,2CAAH,qDCAVC,EAAO,uCAAG,4BAAA7B,EAAA,sEACFC,OAAOQ,SAASC,QAAQoB,UAAUd,OADhC,cACbO,EADa,yBAEZA,GAFY,2CAAH,qDCAdxB,EAAiB,uCAAG,4BAAAC,EAAA,sEACCC,OAAOC,KAAKC,IAAIC,cADjB,cAChBC,EADgB,yBAEfA,EAAS,IAFM,2CAAH,qDAKV0B,EAAQ,uCAAG,4BAAA/B,EAAA,sEACED,IADF,cACdS,EADc,gBAEhBP,OAAOQ,SAASC,QAAQsB,WAAWpB,KAAM,CAAEC,KAAML,IAFjC,OAGtByB,QAAQL,IAAI,uBAHU,2CAAH,qDCcRM,EAAO,WAAO,IAAD,EACMC,mBAAiB,GADvB,mBACjBC,EADiB,KACRC,EADQ,OAEFF,mBAAiB,GAFf,mBAEjB5B,EAFiB,KAEZ+B,EAFY,OAGgBH,mBAAiB,GAHjC,mBAGjBI,EAHiB,KAGHC,EAHG,OAIgBL,mBAAiB,GAJjC,mBAIjBM,EAJiB,KAIHC,EAJG,OAKMP,qBALN,mBAKjBL,EALiB,KAKRa,EALQ,OAMkBR,qBANlB,mBAMjBS,EANiB,KAMFC,EANE,KASxBC,qBAAU,WACR7B,MACC,IAEH,IAAMA,EAAU,uCAAG,4BAAAjB,EAAA,sEACQc,IADR,OACXiC,EADW,OAEjBV,EAAWU,GAFM,2CAAH,qDAKVC,EAAmB,uCAAG,4BAAAhD,EAAA,sEACDkB,IADC,OACpB+B,EADoB,OAE1BT,EAAgBS,GAFU,2CAAH,qDAKnBC,EAAmB,uCAAG,4BAAAlD,EAAA,sEACDwB,IADC,OACpByB,EADoB,OAE1BP,EAAgBO,GAFU,2CAAH,qDAKnBE,EAAU,uCAAG,4BAAAnD,EAAA,sEACA6B,IADA,OACXN,EADW,OAEjBoB,EAAWpB,GAFM,2CAAH,qDAKV6B,EAAa,uCAAG,4BAAApD,EAAA,sEACG0B,IADH,OACd2B,EADc,OAEpBR,EAAiBQ,GAFG,2CAAH,qDAKnB,OACE,uBAAMvD,UAAU,MAAhB,UACE,gCACE,qCACA,4BAAI8C,IACJ,wBAAQU,QAAS,kBAAMF,KAAvB,2BAIF,mDAAsBhB,KACtB,wBAAQkB,QAAS,kBAAMrC,KAAvB,4BAIA,gCACE,+CACA,uBACEsC,KAAK,SACLC,SAAU,SAACC,GAAD,OAAOnB,EAAOoB,SAASD,EAAEE,OAAOC,WAE5C,wBAAQN,QAAS,kBAAMhD,EAAOC,IAA9B,wBAGF,gCACE,wBAAQ+C,QAAS,kBAAMvB,KAAvB,uBACA,sDAAyBQ,KACzB,wBAAQe,QAAS,kBAAMN,KAAvB,wCAGA,oDAAuBP,KACvB,wBAAQa,QAAS,kBAAMJ,KAAvB,kCAGA,4CAAepB,KACf,wBAAQwB,QAAS,kBAAMH,KAAvB,8BAGF,wBAAQG,QAAS,kBAAMjC,KAAvB,yBC9FOwC,EAAY,WAErB,OACI,iCACI,yDACA,qBAAKC,IAAI,sEAAsEC,IAAI,GAAGjE,UAAU,mBCe7FkE,MAdf,WACE,OACE,cAAC,IAAD,CAAQC,SAAUC,IAAlB,SACE,sBAAKpE,UAAU,YAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqE,KAAK,IAAIC,OAAK,EAACC,UAAWnC,IACjC,cAAC,IAAD,CAAOiC,KAAK,cAAcC,OAAK,EAACC,UAAWR,a,2BCH/CS,EAAS,uCAAG,sBAAAtE,EAAA,sDACZC,OAAOsE,UACTtE,OAAOC,KAAO,IAAIsE,IAAKvE,OAAOsE,UAC9BtE,OAAOsE,SAASE,UAEhBxE,OAAOyE,MAAM,0BALC,2CAAH,qDASTC,EAAY,uCAAG,sBAAA3E,EAAA,sEACN,IAAIC,OAAOC,KAAKC,IAAIyE,SAdrBnE,EAASoE,IAJC,8CAiBH,mFAAH,qDAILC,EAAQ,uCAAG,sBAAA9E,EAAA,sEAChBsE,IADgB,uBAEEK,IAFF,OAEtB1E,OAAOQ,SAFe,kDAAH,qDCTNsE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCFdF,IAEAU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.641f2ee6.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return (\n    <header className=\"app-header\">\n        <h1>PolarBet</h1>\n      </header>\n  );\n};\n","const getCurrentAccount = async () => {\n    const accounts = await window.web3.eth.getAccounts();\n    return accounts[0];\n}\n\nexport const AddBet = async (bet: number) => {\n    const account = await getCurrentAccount();\n    window.contract.methods.addBet(bet).send({ from: account });\n};\n\n","export const DealerBalance = async () => {\n    const getBalance = await window.contract.methods.dealerBalance().call();\n    return getBalance;\n};","export const DealerDiceResult = async () => {\n    const result = await window.contract.methods.getDiceResultOfDealer().call();\n    return result;\n  };","const getCurrentAccount = async () => {\n    const accounts = await window.web3.eth.getAccounts();\n    return accounts[0];\n}\n\nexport const PayOut = async () => {\n    const account = await getCurrentAccount();\n    const id = await window.contract.methods.payOut().send({ from: account });\n    return id;\n  };","export const PlayerDiceResult = async () => {\n    const result = await window.contract.methods.getDiceResultOfUser().call();\n    return result;\n  };","export const PlayerWins = async () => {\n    const log = await window.contract.events.PlayerWins();\n    return log;\n  };","export const QueryId = async () => {\n    const id = await window.contract.methods.queryId().call();\n    return id;\n  };","const getCurrentAccount = async () => {\n    const accounts = await window.web3.eth.getAccounts();\n    return accounts[0];\n}\n\nexport const RollDice = async () => {\n    const account = await getCurrentAccount();\n  await window.contract.methods.rollDice().send( { from: account });\n  console.log(\"Roll dice is called\")\n};\n","import React, { useEffect, useState } from \"react\";\nimport { AddBet } from \"../components/AddBet\";\nimport { DealerBalance } from \"../components/DealerBalance\";\nimport { DealerDiceResult } from \"../components/DealerDiceResult\";\nimport { PayOut } from \"../components/PayOut\";\nimport { PlayerDiceResult } from \"../components/PlayerDiceResult\";\nimport { PlayerWins } from \"../components/PlayerWins\";\nimport { QueryId } from \"../components/QueryId\";\nimport { RollDice } from \"../components/RollDice\";\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n    web3: any;\n    contract: any;\n    IpfsHttpClient: any;\n  }\n}\n\nexport const Home = () => {\n  const [balance, setBalance] = useState<number>(0);\n  const [bet, setBet] = useState<number>(0);\n  const [dealerResult, setDealerResult] = useState<number>(0);\n  const [playerResult, setPlayerResult] = useState<number>(0);\n  const [queryId, setQueryId] = useState<string>();\n  const [playerWinsLog, setPlayerWinsLog] = useState<string>();\n\n\n  useEffect(() => {\n    getBalance();\n  }, []);\n\n  const getBalance = async () => {\n    const newBalance = await DealerBalance();\n    setBalance(newBalance);\n  };\n\n  const getDealerDiceResult = async () => {\n    const diceResult = await DealerDiceResult();\n    setDealerResult(diceResult);\n  };\n\n  const getPlayerDiceResult = async () => {\n    const diceResult = await PlayerDiceResult();\n    setPlayerResult(diceResult);\n  };\n\n  const getQueryId = async () => {\n    const id = await QueryId();\n    setQueryId(id);\n  };\n\n  const getPlayerWins = async () => {\n    const eventLog = await PlayerWins();\n    setPlayerWinsLog(eventLog);\n  };\n\n  return (\n    <main className=\"App\">\n      <div>\n        <p>Log:</p>\n        <p>{playerWinsLog}</p>\n        <button onClick={() => getPlayerWins()}>update log</button>\n\n      </div>\n\n      <h2>Dealer balance = {balance}</h2>\n      <button onClick={() => getBalance()}>\n          update balance\n        </button>\n\n      <div>\n        <h2>Set your bet:</h2>\n        <input\n          type=\"number\"\n          onChange={(e) => setBet(parseInt(e.target.value))}\n        />\n        <button onClick={() => AddBet(bet)}>add bet</button>\n      </div>\n\n      <div>\n        <button onClick={() => RollDice()}>roll dice</button>\n        <p>Dealer dice result = {dealerResult}</p>\n        <button onClick={() => getDealerDiceResult()}>\n          get the dealer dice result\n        </button>\n        <p>Your dice result = {playerResult}</p>\n        <button onClick={() => getPlayerDiceResult()}>\n          get your dice result\n        </button>\n        <p>Query ID = {queryId}</p>\n        <button onClick={() => getQueryId()}>show query id</button>\n      </div>\n\n      <button onClick={() => PayOut()}>pay out</button>\n\n    </main>\n  );\n};\n","export const IpfsImage = () => {\n\n    return (\n        <main>\n            <h2>This image is from IPFS</h2>\n            <img src=\"https://ipfs.io/ipfs/QmQ1X9xtZKqHMefkw5AhmriQy5HUMXyftfEFfVDVdgG4fA\" alt=\"\" className=\"ipfs-image\"/>\n        </main>\n    );\n  };","import React from \"react\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Home } from \"./pages/Home\";\nimport { IpfsImage } from \"./pages/IpfsImage\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"Container\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/ipfs-image\" exact component={IpfsImage}></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import Web3 from \"web3\";\nimport contract from \"../assets/static/build/contracts/PolarBetV2.json\";\nconst contractAddress = \"0x0435F38A77843FA5B48BD49d96CB5aa5599DeCAF\"; // Rinkeby\n// const contractAddress = \"0x38FeAe295414d5f072F172c4D604c200739b0021\"; // Ganache\n\nconst contractABI = () => {\n  const abi = contract.abi;\n  return abi; \n}\n\nconst startWeb3 = async () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n  } else {\n    window.alert(\"Metamask not detected!\");\n  }\n};\n\nconst loadContract = async () => {\n  return await new window.web3.eth.Contract(contractABI(), contractAddress);\n};\n\nexport const LoadWeb3 = async () => {\n  await startWeb3();\n  window.contract = await loadContract();\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { LoadWeb3 } from './components/web3';\nimport reportWebVitals from './reportWebVitals';\nimport \"./assets/css/import.scss\";\n\nLoadWeb3();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}